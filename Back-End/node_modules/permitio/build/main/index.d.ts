import { IPermitConfig } from './config';
import { IEnforcer } from './enforcement/enforcer';
import { IApiClient } from './api/client';
import { RecursivePartial } from './utils/types';
import { IElementsApiClient } from './elements/client';
export { ISyncedUser, ISyncedRole, IPermitCache } from './cache/client';
export { IUser, IAction, IResource } from './enforcement/interfaces';
export { IReadApis, IWriteApis } from './api/client';
export { Context, ContextTransform } from './utils/context';
export interface IPermitClient extends IEnforcer, IApiClient, IElementsApiClient {
    config: IPermitConfig;
}
/**
 * Permit.io SDK for Node.js
 *
 * You can use this class to enforce permissions in your app.
 *
 * Usage:
 * const permit = new Permit.init({ ... }); // receives a config object of type IPermitConfig
 * const permitted = await permit.check(user, action, resource);
 */
declare class _Permit {
    private _config;
    private _enforcer;
    private _api;
    private _elements;
    constructor(config: RecursivePartial<IPermitConfig>);
}
declare type Permit = _Permit & IPermitClient;
export declare const Permit: new (config: RecursivePartial<IPermitConfig>) => Permit;
