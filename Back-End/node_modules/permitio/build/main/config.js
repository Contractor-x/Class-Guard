"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfigFactory = void 0;
const lodash_1 = __importDefault(require("lodash"));
// returns a config
class ConfigFactory {
    static defaults() {
        return {
            token: lodash_1.default.get(process.env, 'PERMIT_API_KEY', ''),
            pdp: lodash_1.default.get(process.env, 'PERMIT_PDP_URL', 'http://localhost:7766'),
            apiUrl: lodash_1.default.get(process.env, 'PERMIT_API_URL', 'https://api.permit.io'),
            log: {
                // log level, default is warn (warnings and errors)
                level: lodash_1.default.get(process.env, 'PERMIT_LOG_LEVEL', 'warn'),
                // Label added to logs
                label: lodash_1.default.get(process.env, 'PERMIT_LOG_LABEL', 'Permit.io'),
                // When logging - dump full data to console as JSON
                json: JSON.parse(lodash_1.default.get(process.env, 'PERMIT_LOG_JSON', 'false')),
            },
            multiTenancy: {
                defaultTenant: 'default',
                useDefaultTenantIfEmpty: true,
            },
            timeout: undefined,
            throwOnError: undefined,
        };
    }
    /**
     * Returns a valid config, for unset values returns the default config
     * @param options - a partial configuration
     * @returns
     */
    static build(options) {
        const config = lodash_1.default.merge(lodash_1.default.assign({}, ConfigFactory.defaults()), options);
        return config;
    }
}
exports.ConfigFactory = ConfigFactory;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxvREFBdUI7QUEyQnZCLG1CQUFtQjtBQUNuQixNQUFhLGFBQWE7SUFDeEIsTUFBTSxDQUFDLFFBQVE7UUFDYixPQUFPO1lBQ0wsS0FBSyxFQUFFLGdCQUFDLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsZ0JBQWdCLEVBQUUsRUFBRSxDQUFDO1lBQy9DLEdBQUcsRUFBRSxnQkFBQyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLGdCQUFnQixFQUFFLHVCQUF1QixDQUFDO1lBQ2xFLE1BQU0sRUFBRSxnQkFBQyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLGdCQUFnQixFQUFFLHVCQUF1QixDQUFDO1lBQ3JFLEdBQUcsRUFBRTtnQkFDSCxtREFBbUQ7Z0JBQ25ELEtBQUssRUFBRSxnQkFBQyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sQ0FBQztnQkFDckQsc0JBQXNCO2dCQUN0QixLQUFLLEVBQUUsZ0JBQUMsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxrQkFBa0IsRUFBRSxXQUFXLENBQUM7Z0JBQzFELG1EQUFtRDtnQkFDbkQsSUFBSSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsZ0JBQUMsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxpQkFBaUIsRUFBRSxPQUFPLENBQUMsQ0FBQzthQUNqRTtZQUNELFlBQVksRUFBRTtnQkFDWixhQUFhLEVBQUUsU0FBUztnQkFDeEIsdUJBQXVCLEVBQUUsSUFBSTthQUM5QjtZQUNELE9BQU8sRUFBRSxTQUFTO1lBQ2xCLFlBQVksRUFBRSxTQUFTO1NBQ3hCLENBQUM7SUFDSixDQUFDO0lBRUQ7Ozs7T0FJRztJQUNILE1BQU0sQ0FBQyxLQUFLLENBQUMsT0FBd0M7UUFDbkQsTUFBTSxNQUFNLEdBQUcsZ0JBQUMsQ0FBQyxLQUFLLENBQUMsZ0JBQUMsQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLGFBQWEsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBRXhFLE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUM7Q0FDRjtBQWpDRCxzQ0FpQ0MifQ==