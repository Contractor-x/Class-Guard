import _ from 'lodash';
// returns a config
export class ConfigFactory {
    static defaults() {
        return {
            token: _.get(process.env, 'PERMIT_API_KEY', ''),
            pdp: _.get(process.env, 'PERMIT_PDP_URL', 'http://localhost:7766'),
            apiUrl: _.get(process.env, 'PERMIT_API_URL', 'https://api.permit.io'),
            log: {
                // log level, default is warn (warnings and errors)
                level: _.get(process.env, 'PERMIT_LOG_LEVEL', 'warn'),
                // Label added to logs
                label: _.get(process.env, 'PERMIT_LOG_LABEL', 'Permit.io'),
                // When logging - dump full data to console as JSON
                json: JSON.parse(_.get(process.env, 'PERMIT_LOG_JSON', 'false')),
            },
            multiTenancy: {
                defaultTenant: 'default',
                useDefaultTenantIfEmpty: true,
            },
            timeout: undefined,
            throwOnError: undefined,
        };
    }
    /**
     * Returns a valid config, for unset values returns the default config
     * @param options - a partial configuration
     * @returns
     */
    static build(options) {
        const config = _.merge(_.assign({}, ConfigFactory.defaults()), options);
        return config;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLENBQUMsTUFBTSxRQUFRLENBQUM7QUEyQnZCLG1CQUFtQjtBQUNuQixNQUFNLE9BQU8sYUFBYTtJQUN4QixNQUFNLENBQUMsUUFBUTtRQUNiLE9BQU87WUFDTCxLQUFLLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLGdCQUFnQixFQUFFLEVBQUUsQ0FBQztZQUMvQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLGdCQUFnQixFQUFFLHVCQUF1QixDQUFDO1lBQ2xFLE1BQU0sRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsZ0JBQWdCLEVBQUUsdUJBQXVCLENBQUM7WUFDckUsR0FBRyxFQUFFO2dCQUNILG1EQUFtRDtnQkFDbkQsS0FBSyxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxrQkFBa0IsRUFBRSxNQUFNLENBQUM7Z0JBQ3JELHNCQUFzQjtnQkFDdEIsS0FBSyxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxrQkFBa0IsRUFBRSxXQUFXLENBQUM7Z0JBQzFELG1EQUFtRDtnQkFDbkQsSUFBSSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLGlCQUFpQixFQUFFLE9BQU8sQ0FBQyxDQUFDO2FBQ2pFO1lBQ0QsWUFBWSxFQUFFO2dCQUNaLGFBQWEsRUFBRSxTQUFTO2dCQUN4Qix1QkFBdUIsRUFBRSxJQUFJO2FBQzlCO1lBQ0QsT0FBTyxFQUFFLFNBQVM7WUFDbEIsWUFBWSxFQUFFLFNBQVM7U0FDeEIsQ0FBQztJQUNKLENBQUM7SUFFRDs7OztPQUlHO0lBQ0gsTUFBTSxDQUFDLEtBQUssQ0FBQyxPQUF3QztRQUNuRCxNQUFNLE1BQU0sR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLGFBQWEsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBRXhFLE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUM7Q0FDRiJ9